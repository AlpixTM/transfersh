#!/usr/bin/env python
"""
 <transfersh - unofficial command line client for https://github.com/dutchcoders/transfer.sh>
    Copyright (C) 2017  Lukas N. <Alpix> contact[at]alpix.eu - https://github.com/AlpixTM/transfersh

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.
    If not, see <http://www.gnu.org/licenses/>.

"""
import argparse
import requests
parser = argparse.ArgumentParser()
parser.add_argument("file", help="path to the file to upload",)
parser.add_argument("-v", "--verbosity", help="increase output verbosity", action="store_true")
parser.add_argument("-n", "--name", help="change name of the file on Transfer.sh",)
# parser.add_argument("-t", "--tor", help="upload files via tor network",action="store_true")
args = parser.parse_args()
if args.verbosity:
    print (
    " ====== Transfersh ===== \nUnofficial command-line client for https://transfer.sh/ based on python "
    "\nby Alpix (https://alpix.eu)"
    "\ncontribute: https://github.com/AlpixTM/transfersh"
    )
    print ('Selected file: ' + args.file)

if args.name:
    file_name = args.name
else:
    file_name = args.file.split("/")
    file_name = str(file_name[-1])

with open(args.file, 'rb', buffering=0) as fh:
    response = requests.put('https://transfer.sh/' + file_name,
                            data=fh,
                            )
print ('File saved at: ' + response.text)

"""
if args.tor:
// Tor Support needs new concept -> Public tor socks proxy? Public tor http proxy without daily changing cookie !?

    cookies = dict(onion_cab_iKnowShit='5bc030f023c7a17bd67afde617a5852b')

    with open(args.file, 'rb', buffering=0) as fh:
        response = requests.put('http://jxm5d6emw5rknovg.onion.cab/' + file_name,
                            data=fh,
                            cookies=cookies,
                            )
    print ('File saved at: ' + response.text)
"""
